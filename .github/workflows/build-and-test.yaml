name: Build and test with gRPC SSO service

on:
  pull_request:
    branches:
      - main
      - dev

env:
  REGISTRY_IMAGE: rshelekhov/grpc-sso

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22'

      - name: Install golang-migrate
        run: |
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
          export PATH=$PATH:$(go env GOPATH)/bin
          which migrate

      - name: Install dependencies
        run: go mod download

      - name: Ensure config/reframed directory exists
        run: mkdir -p ./config/reframed

      - name: Create .env file for Reframed App
        run: |
          echo "${{ secrets.ENV_CONFIG_TEST_REFRAMED }}" > ./config/reframed/.env

      - name: Ensure config/grpc-sso directory exists
        run: mkdir -p ./config/grpc-sso

      - name: Create .env file for gRPC SSO service
        run: |
          echo "${{ secrets.ENV_CONFIG_TEST_SSO }}" > ./config/grpc-sso/.env

      - name: Check if .env file for gRPC SSO service exists
        run: ls -la ./config/grpc-sso

      - name: Check .env file
        run: cat ./config/grpc-sso/.env

      - name: Create Docker network
        run: docker network create test_network || true

      - name: Run PostgreSQL for Reframed
        run: |
          docker run -d \
            --name postgres-reframed \
            --network host \
            -e POSTGRES_USER=root \
            -e POSTGRES_PASSWORD=password \
            -e POSTGRES_DB=reframed_dev \
            -p 5432:5432 \
            postgres:latest

      - name: Run PostgreSQL for SSO
        run: |
          docker run -d \
            --name postgres-sso \
            --network host \
            -e POSTGRES_USER=root \
            -e POSTGRES_PASSWORD=password \
            -e POSTGRES_DB=sso_dev \
            -p 5433:5432 \
            postgres:latest

      - name: Wait for PostgreSQL to be ready (Reframed and SSO)
        run: sleep 10

      - name: Check PostgreSQL connection for Reframed
        run: pg_isready -h localhost -p 5432

      - name: Check PostgreSQL connection for SSO
        run: pg_isready -h localhost -p 5433

      - name: Run gRPC Auth service container
        env:
          POSTGRESQL_URL_SSO: postgres://root:password@postgres-sso:5432/sso_dev?sslmode=disable
        run: |
          echo "Starting gRPC Auth service..."
          docker pull ${{ env.REGISTRY_IMAGE }}:latest
          docker run -d \
            --name grpc-sso-service \
            --network host \
            -v ${PWD}/config/grpc-sso:/config \
            -e CONFIG_PATH=/config/.env \
            -e POSTGRESQL_URL=$POSTGRESQL_URL_SSO \
            -p 44044:44044 \
            ${{ env.REGISTRY_IMAGE }}:latest

      - name: Check gRPC SSO service container status
        run: docker ps -a

      - name: Check gRPC SSO service container logs
        run: docker logs grpc-sso-service

      - name: Setup gRPC SSO service (make setup-dev)
        run: |
          echo "Running setup-dev for gRPC SSO service..."
          docker exec grpc-sso-service sh -c "make setup-dev"

      - name: Check PostgreSQL logs for Reframed
        run: docker logs postgres-reframed

      - name: Check PostgreSQL logs for SSO
        run: docker logs postgres-sso

      - name: Run tests
        env:
          POSTGRESQL_URL: postgres://root:password@localhost:5432/reframed_dev?sslmode=disable
          CONFIG_PATH: ./config/reframed/.env
        run: make test

      - name: Check gRPC SSO service container logs after tests
        run: docker logs grpc-sso-service

      - name: Notify results
        run: echo "Tests completed!"