name: Build and test with gRPC SSO service

on:
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22'

      - name: Install golang-migrate
        run: |
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
          export PATH=$PATH:$(go env GOPATH)/bin
          which migrate

      - name: Install dependencies
        run: |
          go mod tidy
          go mod vendor

      - name: Create Docker network
        run: docker network create test-network

      - name: Run PostgreSQL container for SSO
        run: |
          docker run -d --name postgres-sso --network test-network \
            -e POSTGRES_USER=root \
            -e POSTGRES_PASSWORD=password \
            -e POSTGRES_DB=sso_dev \
            postgres:latest

      - name: Run PostgreSQL container for Reframed
        run: |
          docker run -d --name postgres-reframed --network test-network \
            -e POSTGRES_USER=root \
            -e POSTGRES_PASSWORD=password \
            -e POSTGRES_DB=reframed_dev \
            postgres:latest

      - name: Pull and run gRPC SSO service container
        run: |
          docker pull rshelekhov/grpc-sso:latest
          docker run -d --name grpc-sso-service --network test-network \
            -v $(pwd)/config/grpc-sso:/config \
            -e CONFIG_PATH=/config/.env \
            -e POSTGRESQL_URL=postgres://root:password@postgres-sso:5432/sso_dev?sslmode=disable \
            -p 44044:44044 \
            rshelekhov/grpc-sso:latest

      - name: Check container status and logs if it failed
        run: |
          if [ "$(docker inspect -f {{.State.Running}} grpc-sso-service)" != "true" ]; then
            echo "Container grpc-sso-service failed to start. Displaying logs:"
            docker logs grpc-sso-service
            exit 1
          fi

      - name: Wait for services to be ready
        run: sleep 30

      - name: Run make setup-dev for gRPC SSO service
        run: docker exec grpc-sso-service make setup-dev

      - name: Build and run Reframed service
        run: |
          docker build -t reframed:latest -f Dockerfile .
          docker run -d --name reframed-service --network test-network \
            -v $(pwd)/config/reframed:/config \
            -e CONFIG_PATH=/config/.env \
            -e POSTGRESQL_URL=postgres://root:password@postgres-reframed:5432/reframed_dev?sslmode=disable \
            -p 8080:8080 \
            reframed:latest

      - name: Run make setup-dev for Reframed service
        run: docker exec reframed-service make setup-dev

      - name: Run tests for Reframed service
        env:
          GOFLAGS: "-mod=vendor"
        run: docker exec reframed-service make test

      - name: Check logs for gRPC SSO service
        run: docker logs grpc-sso-service

      - name: Check logs for Reframed service
        run: docker logs reframed-service

      - name: Notify results
        run: echo "Tests completed!"